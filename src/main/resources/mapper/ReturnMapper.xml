<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.midnear.midnearshopping.mapper.productManagement.ReturnMapper">
    <!-- 환불상품 최신순 조회 -->
    <select id="selectAll">
        select
            r.return_id,
            o.order_number,
            di.tracking_delivery,
            r.return_status,
            rd.return_delivery_status,
            p.payment_date,
            r.return_request_date,
            r.return_reason,
            rd.collection_complete_date,
            rd.delivery_fee,
            rd.payment_status,
            op.product_name,
            op.color,
            op.size,
            op.quantity,
            op.product_price,
            op.coupon_discount,
            op.point_discount,
            o.all_payment,
            op.delivery_charge,
            o.order_name,
            u.id,
            o.recipient_name,
            di.courier,
            di.invoice_number,
            rd.courier,
            rd.invoice_number,
            o.order_contact,
            o.recipient_contact
        from order_products op
                 inner join returns r on r.order_product_id = op.order_product_id
                 inner join orders o on op.order_id = o.order_id
                 left join return_delivery rd on rd.return_id = r.return_id
                 left join delivery_info di on op.delivery_id = di.delivery_id
                 left join payments p ON o.order_id = p.order_id
                 left join users u on o.user_id = u.user_id
        where  r.return_id is not null
        order by r.return_id
            LIMIT #{pageSize} OFFSET #{offset}

    </select>

    <select id="count">
        select count(*)
        from order_products op
                 inner join returns r on r.order_product_id = op.order_product_id
                 inner join orders o on op.order_id = o.order_id
                 left join return_delivery rd on rd.return_id = r.return_id
                 left join delivery_info di on op.delivery_id = di.delivery_id
                 left join payments p ON o.order_id = p.order_id
                 left join users u on o.user_id = u.user_id
        where  r.return_id is not null
    </select>


    <!-- 취소상품 필터링 조회 -->
    <select id="filterSearch">
        select
            r.return_id,
            o.order_number,
            di.tracking_delivery,
            r.return_status,
            rd.return_delivery_status,
            p.payment_date,
            r.return_request_date,
            r.return_reason,
            rd.collection_complete_date,
            rd.delivery_fee,
            rd.payment_status,
            op.product_name,
            op.color,
            op.size,
            op.quantity,
            op.product_price,
            op.coupon_discount,
            op.point_discount,
            o.all_payment,
            op.delivery_charge,
            o.order_name,
            u.id,
            o.recipient_name,
            di.courier,
            di.invoice_number,
            rd.courier,
            rd.invoice_number,
            o.order_contact,
            o.recipient_contact
        from order_products op
            inner join returns r on r.order_product_id = op.order_product_id
            inner join orders o on op.order_id = o.order_id
            left join return_delivery rd on rd.return_id = r.return_id
            left join delivery_info di on op.delivery_id = di.delivery_id
            left join payments p ON o.order_id = p.order_id
            left join users u on o.user_id = u.user_id
        where  r.return_id is not null
        <!-- 동적 날짜 조건 -->
        <if test="searchPeriod != null and searchPeriod != ''">
            <choose>
                <when test="searchPeriod == '반품요청일'">
                    and r.return_request_date >=
                </when>
                <when test="searchPeriod == '수거완료일'">
                    and rd.collection_complete_date >=
                </when>
                <when test="searchPeriod == '결제일'">
                    and p.payment_date >=
                </when>
            </choose>
            <choose>
                <when test="dateFilter == '오늘'">
                    CURDATE()
                </when>
                <when test="dateFilter == '일주일'">
                    CURDATE() - INTERVAL 7 DAY
                </when>
                <when test="dateFilter == '1개월'">
                    CURDATE() - INTERVAL 1 MONTH
                </when>
                <when test="dateFilter == '3개월'">
                    CURDATE() - INTERVAL 3 MONTH
                </when>
                <when test="dateFilter == '6개월'">
                    CURDATE() - INTERVAL 6 MONTH
                </when>
                <when test="dateFilter == '기간'">
                    #{startDate} AND #{endDate}
                </when>
            </choose>
        </if>
        <if test="searchCondition == '주문상태'">
            and di.tracking_delivery like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '결제일'">
            and  p.payment_date like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '구매자명'">
            and  o.order_name like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '구매자ID'">
            and  u.id like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '수취인명'">
            and  o.recipient_name like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '송장번호'">
            and  rd.invoice_number like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '구매자연락처'">
            and o.order_contact like CONCAT('%', #{searchValue}, '%')
        </if>
        order by r.return_id
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!--  필터링 검색 개수 -->
    <select id="filterCount">
        select count(*)
        from order_products op
        inner join returns r on r.order_product_id = op.order_product_id
        inner join orders o on op.order_id = o.order_id
        left join return_delivery rd on rd.return_id = r.return_id
        left join delivery_info di on op.delivery_id = di.delivery_id
        left join payments p ON o.order_id = p.order_id
        left join users u on o.user_id = u.user_id
        where  r.return_id is not null
        <!-- 동적 날짜 조건 -->
        <if test="searchPeriod != null and searchPeriod != ''">
            <choose>
                <when test="searchPeriod == '반품요청일'">
                    and r.return_request_date >=
                </when>
                <when test="searchPeriod == '수거완료일'">
                    and rd.collection_complete_date >=
                </when>
                <when test="searchPeriod == '결제일'">
                    and p.payment_date >=
                </when>
            </choose>
            <choose>
                <when test="dateFilter == '오늘'">
                    CURDATE()
                </when>
                <when test="dateFilter == '일주일'">
                    CURDATE() - INTERVAL 7 DAY
                </when>
                <when test="dateFilter == '1개월'">
                    CURDATE() - INTERVAL 1 MONTH
                </when>
                <when test="dateFilter == '3개월'">
                    CURDATE() - INTERVAL 3 MONTH
                </when>
                <when test="dateFilter == '6개월'">
                    CURDATE() - INTERVAL 6 MONTH
                </when>
                <when test="dateFilter == '기간'">
                    #{startDate} AND #{endDate}
                </when>
            </choose>
        </if>
        <if test="searchCondition == '주문상태'">
            and di.tracking_delivery like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '결제일'">
            and  p.payment_date like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '구매자명'">
            and  o.order_name like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '구매자ID'">
            and  u.id like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '수취인명'">
            and  o.recipient_name like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '송장번호'">
            and  rd.invoice_number like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '구매자연락처'">
            and o.order_contact like CONCAT('%', #{searchValue}, '%')
        </if>
    </select>

    <!-- 선택주문 반품처리 -->
    <update id="confirmReturn">
        update returns
        set return_status = '환불완료',
            return_complete_date = current_timestamp
        where return_id in
        <foreach item="id" index="index" collection="returnId" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 선택주문 반품 거부처리 -->
    <update id="denayReturn">
        update returns
        set return_status = '반품거부',
        return_denay_reason = #{returnDenayReason}
        where return_id in
        <foreach item="id" index="index" collection="returnId" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 선택주문 교환으로 변경  -->
    <update id="updateEx">
        update returns
        set return_status = '반품거부'
        where return_id in
        <foreach item="id" index="index" collection="returnId" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <insert id="insertRetoEx">
        insert into exchange (exchange_status,exchange_reason,order_product_id)
        select
            '교환완료',
            '판매자 직접 교환',
            r.order_product_id
        from returns r
        where  return_id in
        <foreach item="id" index="index" collection="returnId" open="(" separator="," close=")">
            #{id}
        </foreach>
    </insert>
</mapper>