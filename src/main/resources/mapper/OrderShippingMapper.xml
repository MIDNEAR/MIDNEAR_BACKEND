<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.midnear.midnearshopping.mapper.productManagement.OrderShippingMapper">
    <!-- 주문 상품 최신순 조회 -->
    <select id="selectAll">
        select
            op.order_product_id,
            o.order_number,
            di.tracking_delivery,
            p.payment_date,
            op.product_name,
            op.color,
            op.size,
            op.quantity,
            op.product_price,
            op.coupon_discount,
            op.point_discount,
            o.all_payment,
            op.delivery_charge,
            o.order_name,
            u.id,
            o.recipient_name,
            di.courier,
            di.invoice_number,
            di.delivery_process_date,
            o.order_contact,
            o.postal_code,
            o.address,
            o.detailed_address
        from order_products op
                 inner join orders o on op.order_id = o.order_id
                 left join delivery_info di on op.delivery_id = di.delivery_id
                 left join payments p on o.order_id = p.order_id
                 left join users u on o.user_id = u.user_id
        where p.payment_date is not null
        order by op.order_product_id
            LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <select id="count">
        select count(*)
        from order_products op
                 inner join orders o on op.order_id = o.order_id
                 left join delivery_info di on op.delivery_id = di.delivery_id
                 left join payments p ON o.order_id = p.order_id
                 left join users u on o.user_id = u.user_id
        where p.payment_date is not null
    </select>

<!-- 주문상품 필터링 조회 -->
    <select id="filterSearch">
        select
            op.order_product_id,
            o.order_number,
            di.tracking_delivery,
            p.payment_date,
            op.product_name,
            op.color,
            op.size,
            op.quantity,
            op.product_price,
            op.coupon_discount,
            op.point_discount,
            o.all_payment,
            op.delivery_charge,
            o.order_name,
            u.id,
            o.recipient_name,
            di.courier,
            di.invoice_number,
            di.delivery_process_date,
            o.order_contact,
            o.postal_code,
            o.address,
            o.detailed_address
        from order_products op
            inner join orders o on op.order_id = o.order_id
            left join delivery_info di on op.delivery_id = di.delivery_id
            left join payments p on o.order_id = p.order_id
            left join users u on o.user_id = u.user_id
        where p.payment_date is not null
        <!-- 동적 날짜 조건 -->
        <if test="searchPeriod != null and searchPeriod != ''">
            <choose>
                <when test="searchPeriod == '결제일'">
                    and p.payment_date >=
                </when>
                <when test="searchPeriod == '발송처리일'">
                    and di.delivery_process_date >=
                </when>
            </choose>
            <choose>
                <when test="dateFilter == '오늘'">
                    CURDATE()
                </when>
                <when test="dateFilter == '일주일'">
                    CURDATE() - INTERVAL 7 DAY
                </when>
                <when test="dateFilter == '1개월'">
                    CURDATE() - INTERVAL 1 MONTH
                </when>
                <when test="dateFilter == '3개월'">
                    CURDATE() - INTERVAL 3 MONTH
                </when>
                <when test="dateFilter == '6개월'">
                    CURDATE() - INTERVAL 6 MONTH
                </when>
                <when test="dateFilter == '기간'">
                    #{startDate} AND #{endDate}
                </when>
            </choose>
        </if>
        <if test="searchCondition == '주문상태'">
            and di.tracking_delivery like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '결제일'">
            and  p.payment_date like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '구매자명'">
            and  o.order_name like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '구매자ID'">
            and  u.id like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '수취인명'">
            and  o.recipient_name like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '구매자연락처'">
            and o.order_contact like CONCAT('%', #{searchValue}, '%')
        </if>
        order by op.order_product_id
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!--  필터링 검색 개수 -->
    <select id="filterCount">
        select count(*)
        from order_products op
            inner join orders o on op.order_id = o.order_id
            left join delivery_info di on op.delivery_id = di.delivery_id
            left join payments p on o.order_id = p.order_id
            left join users u on o.user_id = u.user_id
        where p.payment_date is not null
        <if test="searchPeriod != null and searchPeriod != ''">
            <choose>
                <when test="searchPeriod == '결제일'">
                    and p.payment_date >=
                </when>
                <when test="searchPeriod == '발송처리일'">
                    and di.delivery_process_date  >=
                </when>
            </choose>
            <choose>
                <when test="dateFilter == '오늘'">
                    CURDATE()
                </when>
                <when test="dateFilter == '일주일'">
                    CURDATE() - INTERVAL 7 DAY
                </when>
                <when test="dateFilter == '1개월'">
                    CURDATE() - INTERVAL 1 MONTH
                </when>
                <when test="dateFilter == '3개월'">
                    CURDATE() - INTERVAL 3 MONTH
                </when>
                <when test="dateFilter == '6개월'">
                    CURDATE() - INTERVAL 6 MONTH
                </when>
                <when test="dateFilter == '기간'">
                    #{startDate} AND #{endDate}
                </when>
            </choose>
        </if>
        <if test="searchCondition == '주문상태'">
            and di.tracking_delivery like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '결제일'">
            and  p.payment_date like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '구매자명'">
            and  o.order_name like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '구매자ID'">
            and  u.id like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '수취인명'">
            and  o.recipient_name like CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchCondition == '구매자연락처'">
            and o.order_contact like CONCAT('%', #{searchValue}, '%')
        </if>
    </select>

<!-- 발주확인 -->
    <insert id="insertDeliveryInfo" useGeneratedKeys="true" keyProperty="deliveryId">
        insert into delivery_info (tracking_delivery)
        values (#{trackingDelivery})
    </insert>

    <update id="updateDeliveryId">
        update order_products
        set delivery_id = #{deliveryId}
        where order_product_id = #{orderProductId}
    </update>

<!-- 송장번호 입력 -->
    <update id="insertInvoice">
        update delivery_info di
        inner join order_products op on op.delivery_id = di.delivery_id
        set di.tracking_delivery = '배송중',
            di.courier = #{courier},
            di.invoice_number=#{invoiceNumber},
            di.carrier_id = #{carrierId},
            di.delivery_process_date = Now()
        where op.order_product_id in
        <foreach item="id" index="index" collection="orderProductId" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

<!-- 이름검사 -->
    <select id="selectCarrierName">
        select carrier_id
        from carrier_mapping
        where carrier_name = #{carrierName}
    </select>

<!-- 발송 지연처리 -->
    <update id="delaySipping">
        update delivery_info di
        inner join order_products op on op.delivery_id = di.delivery_id
        set di.tracking_delivery = '배송전'
        where op.order_product_id in
        <foreach item="id" index="index" collection="orderProductId" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

<!-- 판매자 직접취소 -->
    <insert id="directCancel">
        insert into canceled_products (cancellation_request_date, cancellation_status, cancellation_approval_date, cancel_reason, order_product_id)
        <foreach item="id" index="index" collection="orderProductId" open="values" separator="," close="">
            (current_timestamp, '취소완료', current_timestamp, '판매자 직접취소', #{id})
        </foreach>
    </insert>

<!-- 옵션별 수량 엑셀 다운로드를 위한 자료조회 -->
    <select id="selectOptionQuantity">
        select
        product_name,
        color,
        size,
        SUM(quantity) as quantity
        from order_products
        where order_product_id in
        <foreach item="id" index="index" collection="orderProductId" open="(" separator="," close=")">
            #{id}
        </foreach>
        group by product_name, color, size
    </select>

<!-- 전체 주문 정보 엑셀 다운로드를 위한 자료조회 -->
    <select id="selectOrderDetails">
        select
        o.order_name,
        o.recipient_name,
        op.product_name,
        op.color,
        op.size,
        op.quantity,
        di.invoice_number
        from order_products op
            inner join orders o on op.order_id = o.order_id
            left join delivery_info di on op.delivery_id = di.delivery_id
        where order_product_id  in
        <foreach item="id" index="index" collection="orderProductId" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

<!-- 선택건 주문서 출력-->
    <select id="selectOrderRecipt">
        select
            o.order_number,
            op.buy_confirm_date,
            di.tracking_delivery,
            op.product_name,
            op.product_price,
            op.quantity,
            o.recipient_name,
            o.recipient_contact,
            o.postal_code,
            o.address,
            o.detailed_address,
            o.delivery_request,
            p.toss_payment_method,
            op.delivery_charge,
            p.total_order_payment,
            p.all_payment
        from order_products op
            inner join delivery_info di on op.delivery_id = di.delivery_id
            inner join orders o on op.order_id = o.order_id
            left join payments p on p.order_id = o.order_id
        where op.order_product_id in
        <foreach item="id" index="index" collection="orderProductId" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

</mapper>


