<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.midnear.midnearshopping.mapper.order.OrderMapper">

    <!-- 주문 정보 조회 -->
    <select id="getOrdersByUserId">
        SELECT *
        FROM orders o
        WHERE user_id = #{userId}
        ORDER BY
        <choose>
            <when test="sort == 'latest'">
                o.order_date DESC
            </when>
            <when test="sort == 'oldest'">
                o.order_date ASC
            </when>
            <otherwise>
                o.order_date DESC
            </otherwise>
        </choose>
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 비회원 주문 정보 조회 -->
    <select id="getOrdersNonUser">
        SELECT order_id
        FROM orders
        WHERE order_name = #{orderName} AND order_contact = #{orderContact} AND order_number = #{orderNumber}
    </select>

    <select id="getOrderById" parameterType="long" resultType="com.midnear.midnearshopping.domain.vo.order.OrdersVO">
        SELECT * FROM orders WHERE order_id = #{orderId}
    </select>


    <!-- 주문 정보 전체 조회 -->
    <select id="getAllOrders">
        SELECT * FROM orders
    </select>

    <!-- 주문 추가 -->
    <insert id="insertOrder" useGeneratedKeys="true" keyProperty="orderId" >
        INSERT INTO orders (
            order_name, order_contact, order_email,
             order_date, recipient_name, postal_code,
            address, detailed_address, order_number, user_id, all_payment, delivery_request
        ) VALUES (
                     #{orderName}, #{orderContact}, #{orderEmail},
                      #{orderDate}, #{recipientName}, #{postalCode},
                     #{address}, #{detailedAddress},  #{orderNumber}, #{userId},
                      #{allPayment}, #{deliveryRequest}
                 )
    </insert>

    <!-- 주문 정보 수정 -->
    <update id="updateOrder">
        UPDATE orders SET
                          order_name = #{orderName},
                          order_contact = #{orderContact},
                          order_email = #{orderEmail},
                          total_order_quantity = #{quantity},
                          total_payment_amount = #{totalPaymentAmount},
                          order_date = #{orderDate},
                          recipient_name = #{recipientName},
                          postal_code = #{postalCode},
                          address = #{address},
                          detailed_address = #{detailedAddress},
                          point_usage = #{pointUsage},
                          order_number = #{orderNumber},
                          user_id = #{userId},
                          delivery_id = #{deliveryId},
                          all_payment = #{allPayment}
        WHERE order_id = #{orderId}
    </update>

    <!-- 주문 삭제 -->
    <delete id="deleteOrderById">
        DELETE FROM orders WHERE order_id = #{orderId}
    </delete>

    <select id="getPaymentInfoByOrderId">
        select
            p.toss_payment_method AS tossPaymentMethod,
            p.total_order_payment AS totalOrderPayment,
            p.payment_status AS paymentStatus,
            p.toss_order_id AS tossOrderId,
            p.toss_payment_key AS tossPaymentKey,
            o.all_payment AS allPayment,
            p.payment_date AS paymentDate,
            op.delivery_charge AS deliveryCharge
        from payments p
            join orders o on o.order_id=p.order_id
            join order_products op on op.order_id = o.order_id
        where p.order_id=#{orderId}
        limit 1
    </select>

    <select id="isFree">
        SELECT CASE WHEN #{allPayment} > free_delivery_condition THEN TRUE ELSE FALSE END
        from delivery_charge
    </select>


</mapper>
